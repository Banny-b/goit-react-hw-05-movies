{"version":3,"file":"static/js/523.d6bd4ce7.chunk.js","mappings":"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","sources":["components/MovieDetails/MovieDetailsStyled.jsx","components/MovieDetails/MovieDetailsPage.jsx","services/Api.jsx","styles/style.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\n\nexport const Section = styled.section`\n  display: flex;\n  padding: 10px;\n  margin-top: 15px;\n  margin-right: auto;\n  margin-left: auto;\n  width: 100%;\n  justify-content: center;\n`;\n\nexport const FilmInfoContainer = styled.div`\n  margin-right: 15px;\n  margin-left: 15px;\n  max-width: 100%;\n  max-height: 50%;\n`;\n\nexport const FilmMore = styled.section`\n  padding: 10px;\n  margin: 15px auto;\n`;\n\nexport const Paragraph = styled.div`\n  margin-bottom: 15px;\n  font-size: 18px;\n  color: ${props => props.theme.colors.active};\n`;\n\nexport const GenresList = styled.ul`\n  display: flex;\n  font-size: 14px;\n  color: ${props => props.theme.colors.active};\n`;\n\nexport const GenresItem = styled.li`\n  font-weight: 600;\n  margin-right: 7px;\n`;\n\nexport const LinkReturn = styled(NavLink)`\n  display: flex;\n  justify-content: center;\n  text-decoration: none;\n  padding: 8px 20px;\n  color: ${props => props.theme.colors.white};\n  font-weight: 500;\n  width: 150px;\n  background-color: ${props => props.theme.colors.buttonBgBack};\n  border-radius: 5px;\n  margin-left: 10px;\n  transition: all 250ms ease-in-out;\n  :hover {\n    transform: scale(1.08);\n    box-shadow: inset 1px 1px 2px ${props => props.theme.colors.white},\n                inset -1px -1px 2px ${props => props.theme.colors.primaryText};\n    background-image: -webkit-linear-gradient(top, rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.2));\n    background-image: -moz-linear-gradient(top, rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.2));\n    background-image: -o-linear-gradient(top, rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.2));\n    background-image: -ms-linear-gradient(top, rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.2));\n    background-image: linear-gradient(top, rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.2));\n    -webkit-transition: All 0.5s ease;\n  }\n`;\n\nexport const LinkCast = styled(NavLink)`\n  height: 45px;\n  padding: 10px 30px;\n  margin-right: 15px;\n  border-radius: 5px;\n  text-decoration: none;\n  color: ${props => props.theme.colors.active};\n  border: 1px solid ${props => props.theme.colors.active};\n  transition: all 250ms ease-in-out;\n  &.active {\n    color: ${props => props.theme.colors.white};\n    background-color: ${props => props.theme.colors.active};\n  }\n  :hover {\n    transform: scale(1.05);\n    box-shadow: inset 1px 1px 2px ${props => props.theme.colors.white},\n                inset -1px -1px 2px ${props => props.theme.colors.active};\n`;\n\nexport const LinkRewiews = styled(NavLink)`\n  height: 45px;\n  padding: 10px 15px;\n  border-radius: 5px;\n  text-decoration: none;\n  color: ${props => props.theme.colors.active};\n  border: 1px solid ${props => props.theme.colors.active};\n  transition: all 250ms ease-in-out;\n  &.active {\n    color: ${props => props.theme.colors.white};\n    background-color: ${props => props.theme.colors.active};\n  }\n  :hover {\n    transform: scale(1.05);\n    box-shadow: inset 1px 1px 2px ${props => props.theme.colors.white},\n                inset -1px -1px 2px ${props => props.theme.colors.active};\n`;","import { useState, useEffect } from 'react';\nimport { useParams, Outlet, useLocation } from 'react-router-dom';\nimport { fetchMovieDetails } from '../../services/Api';\nimport noPhoto from '../../images/noPhoto.png';\nimport {\n  LinkReturn,\n  Paragraph,\n  LinkCast,\n  LinkRewiews,\n  FilmInfoContainer,\n  Section,\n  GenresItem,\n  GenresList,\n  FilmMore,\n} from './MovieDetailsStyled';\nimport { Loader } from '../Loader/Loader';\nimport {\n  MainMovieTitle,\n  Img,\n  Title,\n  SecondaryMovieTitle,\n} from '../../styles/style';\n\n\nexport default function MovieDetailsPage() {\n  const [movies, setMovies] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  let { moviesId } = useParams();\n\n  const location = useLocation();\n  const locationFrom = location?.state?.from ?? '/';\n\n  useEffect(() => {\n    const oneMovie = async () => {\n      setLoading(true);\n      try {\n        await fetchMovieDetails(moviesId).then(data => {\n          setMovies(data);\n        });\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    oneMovie();\n  }, [moviesId]);\n\n  const releaseData = new Date(movies.release_date);\n  const { release_date, title, vote_average, overview, genres, poster_path } =\n    movies;\n\n  return (\n    <>\n      <LinkReturn to={locationFrom}> â—€ BACK </LinkReturn>\n      {loading && <Loader />}\n      {error && <Title>Oops...there is nothing, try again</Title>}\n      {!error && (\n        <Section>\n          {poster_path ? (\n            <Img\n              src={`https://image.tmdb.org/t/p/w300${poster_path}`}\n              alt=\"\"\n              min-width={'100px'}\n            />\n          ) : (\n            <Img src={noPhoto} alt=\"\" />\n          )}\n\n          <FilmInfoContainer>\n            <MainMovieTitle>\n              {title} ({releaseData.getFullYear(release_date)})\n            </MainMovieTitle>\n            <SecondaryMovieTitle>\n              User score: {vote_average * 10}%\n            </SecondaryMovieTitle>\n            <SecondaryMovieTitle>Genres:</SecondaryMovieTitle>\n            <GenresList>\n              {genres &&\n                genres.map(({ name }) => (\n                  <GenresItem key={name}>ðŸŽ¥ {name} |</GenresItem>\n                ))}\n            </GenresList>\n            <SecondaryMovieTitle>Overview </SecondaryMovieTitle>\n            {overview ? (\n              <Paragraph>{overview}</Paragraph>\n            ) : (\n              <Paragraph>No overview</Paragraph>\n            )}\n          </FilmInfoContainer>\n        </Section>\n      )}\n      {!error && (\n        <Section>\n          <LinkCast\n            to={`/movies/${moviesId}/cast`}\n            state={{ from: locationFrom }}\n          >\n            Cast\n          </LinkCast>\n          <LinkRewiews\n            to={`/movies/${moviesId}/reviews`}\n            state={{ from: locationFrom }}\n          >\n            Reviews\n          </LinkRewiews>\n        </Section>\n      )}\n      <FilmMore>\n        <Outlet />\n      </FilmMore>\n    </>\n  );\n};","import axios from 'axios';\nimport PropTypes from 'prop-types';\n\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY = '1d30702fbda303ebd1702730ed498532';\n\nasync function fetchMovies(url = '', config = {}) {\n  const response = await axios.get(url, config);\n  return response.data;\n};\n\nexport function fetchTrendMovie() {\n  return fetchMovies(`${BASE_URL}/trending/movie/day?api_key=${KEY}`);\n};\n\nexport function fetchSearchMovie(query) {\n  return fetchMovies(\n    `${BASE_URL}search/movie?api_key=${KEY}&query=${query}&language=en-US&include_adult=false`\n  );\n};\n\nexport function fetchMovieDetails(moviesId) {\n  return fetchMovies(\n    `${BASE_URL}movie/${moviesId}?api_key=${KEY}&language=en-US`\n  );\n};\n\nexport function fetchCast(moviesId) {\n  return fetchMovies(\n    `${BASE_URL}movie/${moviesId}/credits?api_key=${KEY}&language=en-US&`\n  );\n};\n\nexport function fetchReviews(movieId) {\n  return fetchMovies(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${KEY}&language=en-US&`\n  );\n};\n\nfetchSearchMovie.propTypes = {\n  search: PropTypes.string.isRequired,\n};\n\nfetchMovieDetails.propTypes = {\n  id: PropTypes.number.isRequired,\n};\n\nfetchReviews.propTypes = {\n  id: PropTypes.number.isRequired,\n};\n\nfetchCast.propTypes = {\n  id: PropTypes.number.isRequired,\n};","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\n\nconst Section = styled.section`\n  display: flex;\n  margin-top: 15px;\n  margin-right: auto;\n  margin-left: auto;\n  justify-content: center;\n`;\n\nconst Title = styled.h1`\n  text-align: end;\n  font-size: 28px;\n  margin-bottom: 10px;\n  color: ${props => props.theme.colors.primaryText};\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  animation: text 20s infinite linear reverse ;\n  @keyframes text {\n    0%{\n      transform: translate(50%, 0);\n    }\n    \n    100%{\n      transform: translate(-100%, 0);\n    }\n  }\n`;\n\nconst LinkStyled = styled(NavLink)`\n  text-decoration: none;\n`;\n\nconst CardInfoContainer = styled.div`\n  padding: 0 10px;\n`;\n\nconst MainMovieTitle = styled.h2`\n  font-size: 26px;\n  margin-top: 10px;\n  margin-bottom: 10px;\n  color: ${props => props.theme.colors.primaryText};\n`;\n\nconst SecondaryMovieTitle = styled.h3`\n  font-size: 16px;\n  margin-top: 10px;\n  margin-bottom: 10px;\n  color: ${props => props.theme.colors.primaryText};\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nconst MovieList = styled.ul`\n  display: grid;\n  max-width: 100%;\n  margin-left: auto;\n  margin-right: auto;\n  grid-gap: 24px;\n  grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));\n`;\n\nconst MovieItem = styled.li`\n  width: 100%;\n  display: block;\n  padding: 5px;\n  background-color: ${props => props.theme.colors.buttonBg};\n  transform: scale(1);\n  transition: transform 250ms linear;\n  border-radius: 5px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n              0px 1px 1px 0px rgba(0, 0, 0, 0.14), \n              0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n  :hover,\n  :focus {\n    transform: scale(1.05);\n    cursor: pointer;\n  }\n`;\n\nconst MovieText = styled.p`\n  margin-bottom: 10px;\n  color: ${props => props.theme.colors.grey};\n  font-size: 14px;\n  font-weight: bold;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nconst Img = styled.img`\n  border-radius: 5px;\n  max-width: 480px;\n`;\n\nconst ImageFilm = styled.img`\n  border-radius: 5px;\n  width: 100%;\n`;\n\nexport {\n  CardInfoContainer,\n  Title,\n  MainMovieTitle,\n  LinkStyled,\n  SecondaryMovieTitle,\n  MovieList,\n  MovieItem,\n  MovieText,\n  Img,\n  ImageFilm,\n  Section,\n};"],"names":["Section","styled","FilmInfoContainer","FilmMore","Paragraph","props","theme","colors","active","GenresList","GenresItem","LinkReturn","NavLink","white","buttonBgBack","primaryText","LinkCast","LinkRewiews","MovieDetailsPage","useState","movies","setMovies","loading","setLoading","error","setError","moviesId","useParams","location","useLocation","locationFrom","state","from","useEffect","oneMovie","fetchMovieDetails","then","data","releaseData","Date","release_date","title","vote_average","overview","genres","poster_path","to","Loader","src","alt","noPhoto","getFullYear","map","name","BASE_URL","KEY","fetchMovies","url","config","axios","response","fetchTrendMovie","fetchSearchMovie","query","fetchCast","fetchReviews","movieId","propTypes","search","PropTypes","id","Title","LinkStyled","CardInfoContainer","MainMovieTitle","SecondaryMovieTitle","MovieList","MovieItem","buttonBg","MovieText","grey","Img","ImageFilm"],"sourceRoot":""}