{"version":3,"file":"static/js/509.fa9160c5.chunk.js","mappings":"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","sources":["components/MovieItemCard/MovieItemCard.jsx","icon/search.svg","components/MoviePage/MoviePageCard.jsx","components/MoviePage/MoviePageStyled.jsx","components/MoviePage/MoviePage.jsx","services/Api.jsx","styles/style.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport noFilm from '../../images/noFilm.jpg';\nimport {\n  CardInfoContainer,\n  SecondaryMovieTitle,\n  MovieItem,\n  MovieText,\n  ImageFilm,\n  LinkStyled,\n} from '../../styles/style';\n\n\nexport function MovieItemCard({\n  id,\n  title,\n  name,\n  backdrop_path,\n  release_date,\n}) {\n  const location = useLocation();\n\n  const releaseData = new Date(release_date);\n\n  return (\n    <MovieItem key={id}>\n      <LinkStyled to={`/movies/${id}`} state={{ from: location }}>\n        {backdrop_path ? (\n          <ImageFilm\n            src={`https://image.tmdb.org/t/p/w300${backdrop_path}`}\n            alt=\"\"\n          />\n        ) : (\n          <ImageFilm src={noFilm} alt=\"\" />\n        )}\n\n        <CardInfoContainer>\n          <SecondaryMovieTitle>{title ? title : name}</SecondaryMovieTitle>\n          <MovieText>{releaseData.toLocaleDateString()}</MovieText>\n        </CardInfoContainer>\n      </LinkStyled>\n    </MovieItem>\n  );\n};\n\nMovieItemCard.propTypes = {\n  id: PropTypes.number,\n  title: PropTypes.string,\n  name: PropTypes.string,\n  backdrop_path: PropTypes.string,\n  vote_count: PropTypes.number,\n  vote_average: PropTypes.number,\n};","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgSearch(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 22,\n    height: 22,\n    viewBox: \"0 0 32 32\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title === undefined ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, \"search\") : title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M31.008 27.231l-7.58-6.447c-0.784-0.705-1.622-1.029-2.299-0.998 1.789-2.096 2.87-4.815 2.87-7.787 0-6.627-5.373-12-12-12s-12 5.373-12 12 5.373 12 12 12c2.972 0 5.691-1.081 7.787-2.87-0.031 0.677 0.293 1.515 0.998 2.299l6.447 7.58c1.104 1.226 2.907 1.33 4.007 0.23s0.997-2.903-0.23-4.007zM12 20c-4.418 0-8-3.582-8-8s3.582-8 8-8 8 3.582 8 8-3.582 8-8 8z\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSearch);\nexport default __webpack_public_path__ + \"static/media/search.404bb1d4d548a2559d86f26ef28e01a6.svg\";\nexport { ForwardRef as ReactComponent };","import PropTypes from 'prop-types';\nimport { MovieItemCard } from '../MovieItemCard/MovieItemCard';\nimport { MovieList } from '../../styles/style';\n\n\nexport function MoviePageCard({ searchFilms }) {\n  return (\n    <MovieList>\n      {searchFilms.map(({ id, title, release_date, name, backdrop_path }) => (\n        <MovieItemCard\n          key={id}\n          id={id}\n          release_date={release_date}\n          title={title}\n          name={name}\n          backdrop_path={backdrop_path}\n        />\n      ))}\n    </MovieList>\n  );\n};\n\nMoviePageCard.propTypes = {\n  searchFilms: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n      name: PropTypes.string,\n      backdrop_path: PropTypes.string,\n    })\n  ),\n};","import styled from 'styled-components';\n\n\nexport const Form = styled.form`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  margin-top: 20px;\n  margin-bottom: 20px;\n  width: 100%;\n`;\n\nexport const FormInput = styled.input`\n  display: inline-block;\n  font-size: 20px;\n  padding: 10px;\n  margin-right: 10px;\n  border: none;\n  border-radius: 10px;\n  background-color: ${props => props.theme.colors.white};\n  box-shadow: inset 2px 2px 5px ${props => props.theme.colors.colorShadow},\n              inset -5px -5px 10px ${props => props.theme.colors.white};\n  transition: all 0.2s ease-in-out;\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n  &:hover {\n    box-shadow: inset 1px 1px 2px ${props => props.theme.colors.white},\n                inset -1px -1px 2px ${props => props.theme.colors.active};\n  }\n`;\n\nexport const SearchBtn = styled.button`\n  background-color: ${props => props.theme.colors.white};\n  width: 40px;\n  height: 40px;\n  border: 0;\n  border-radius: 20%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  cursor: pointer;\n  outline: none;\n  appearance: none;\n  transition: all 0.2s ease-in-out;\n  box-shadow: inset 2px 2px 5px ${props => props.theme.colors.colorShadow},\n              inset -5px -5px 10px ${props => props.theme.colors.white};\n  &:hover {\n    transform: scale(1.05);\n    box-shadow: inset 1px 1px 2px ${props => props.theme.colors.white},\n                inset -1px -1px 2px ${props => props.theme.colors.active};\n  }\n  &:focus {\n    opacity: 2;\n  }\n`;","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchSearchMovie } from '../../services/Api';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { ReactComponent as SearchIcon } from '../../icon/search.svg';\nimport { MoviePageCard } from './MoviePageCard';\nimport { Form, FormInput, SearchBtn } from './MoviePageStyled';\n\n\nexport default function MoviesPage() {\n  const [search, setSearch] = useState('');\n  const [searchSubmit, setSearchSubmit] = useState('');\n  const [searchFilms, setSearchFilms] = useState([]);\n  const [searchParam, setSearchParam] = useSearchParams();\n\n  useEffect(() => {\n    if (searchParam.has('query')) {\n      setSearchSubmit(searchParam.get('query'));\n    }\n    return () => {\n      setSearchFilms([]);\n    };\n  }, [searchParam]);\n\n  useEffect(() => {\n    if (searchSubmit === '') {\n      return;\n    }\n    const searchFilm = async () => {\n      await fetchSearchMovie(searchSubmit)\n        .then(data => {\n          if (data.results.length > 0) {\n            setSearchFilms(data.results);\n            return;\n          }\n          throw Error();\n        })\n        .catch(error => {\n          toast.error('Movie not found');\n          console.log(error);\n        });\n    };\n    searchFilm();\n  }, [searchSubmit]);\n\n  const handleSearch = event => {\n    setSearch(event.target.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setSearchSubmit(search);\n\n    if (search === '') {\n      toast.error('Enter movie name or genre');\n      return;\n    }\n\n    setSearchParam({ query: search });\n    setSearch('');\n  };\n\n  return (\n    <>\n      <Toaster />\n      <Form onSubmit={handleSubmit}>\n        <FormInput\n          onChange={handleSearch}\n          value={search}\n          placeholder=\"Search movies...\"\n        />\n        <SearchBtn type=\"submit\">\n          <SearchIcon />\n        </SearchBtn>\n      </Form>\n      {searchFilms && <MoviePageCard searchFilms={searchFilms} />}\n    </>\n  );\n};","import axios from 'axios';\nimport PropTypes from 'prop-types';\n\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY = '1d30702fbda303ebd1702730ed498532';\n\nasync function fetchMovies(url = '', config = {}) {\n  const response = await axios.get(url, config);\n  return response.data;\n};\n\nexport function fetchTrendMovie() {\n  return fetchMovies(`${BASE_URL}/trending/movie/day?api_key=${KEY}`);\n};\n\nexport function fetchSearchMovie(query) {\n  return fetchMovies(\n    `${BASE_URL}search/movie?api_key=${KEY}&query=${query}&language=en-US&include_adult=false`\n  );\n};\n\nexport function fetchMovieDetails(moviesId) {\n  return fetchMovies(\n    `${BASE_URL}movie/${moviesId}?api_key=${KEY}&language=en-US`\n  );\n};\n\nexport function fetchCast(moviesId) {\n  return fetchMovies(\n    `${BASE_URL}movie/${moviesId}/credits?api_key=${KEY}&language=en-US&`\n  );\n};\n\nexport function fetchReviews(movieId) {\n  return fetchMovies(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${KEY}&language=en-US&`\n  );\n};\n\nfetchSearchMovie.propTypes = {\n  search: PropTypes.string.isRequired,\n};\n\nfetchMovieDetails.propTypes = {\n  id: PropTypes.number.isRequired,\n};\n\nfetchReviews.propTypes = {\n  id: PropTypes.number.isRequired,\n};\n\nfetchCast.propTypes = {\n  id: PropTypes.number.isRequired,\n};","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\n\nconst Section = styled.section`\n  display: flex;\n  margin-top: 15px;\n  margin-right: auto;\n  margin-left: auto;\n  justify-content: center;\n`;\n\nconst Title = styled.h1`\n  text-align: end;\n  font-size: 28px;\n  margin-bottom: 10px;\n  color: ${props => props.theme.colors.primaryText};\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  animation: text 20s infinite linear reverse ;\n  @keyframes text {\n    0%{\n      transform: translate(50%, 0);\n    }\n    \n    100%{\n      transform: translate(-100%, 0);\n    }\n  }\n`;\n\nconst LinkStyled = styled(NavLink)`\n  text-decoration: none;\n`;\n\nconst CardInfoContainer = styled.div`\n  padding: 0 10px;\n`;\n\nconst MainMovieTitle = styled.h2`\n  font-size: 26px;\n  margin-top: 10px;\n  margin-bottom: 10px;\n  color: ${props => props.theme.colors.primaryText};\n`;\n\nconst SecondaryMovieTitle = styled.h3`\n  font-size: 16px;\n  margin-top: 10px;\n  margin-bottom: 10px;\n  color: ${props => props.theme.colors.primaryText};\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nconst MovieList = styled.ul`\n  display: grid;\n  max-width: 100%;\n  margin-left: auto;\n  margin-right: auto;\n  grid-gap: 24px;\n  grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));\n`;\n\nconst MovieItem = styled.li`\n  width: 100%;\n  display: block;\n  padding: 5px;\n  background-color: ${props => props.theme.colors.buttonBg};\n  transform: scale(1);\n  transition: transform 250ms linear;\n  border-radius: 5px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n              0px 1px 1px 0px rgba(0, 0, 0, 0.14), \n              0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n  :hover,\n  :focus {\n    transform: scale(1.05);\n    cursor: pointer;\n  }\n`;\n\nconst MovieText = styled.p`\n  margin-bottom: 10px;\n  color: ${props => props.theme.colors.grey};\n  font-size: 14px;\n  font-weight: bold;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nconst Img = styled.img`\n  border-radius: 5px;\n  max-width: 480px;\n`;\n\nconst ImageFilm = styled.img`\n  border-radius: 5px;\n  width: 100%;\n`;\n\nexport {\n  CardInfoContainer,\n  Title,\n  MainMovieTitle,\n  LinkStyled,\n  SecondaryMovieTitle,\n  MovieList,\n  MovieItem,\n  MovieText,\n  Img,\n  ImageFilm,\n  Section,\n};"],"names":["MovieItemCard","id","title","name","backdrop_path","release_date","location","useLocation","releaseData","Date","to","state","from","src","alt","noFilm","toLocaleDateString","_path","_excluded","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgSearch","_ref","svgRef","titleId","props","xmlns","width","height","viewBox","ref","undefined","d","ForwardRef","MoviePageCard","searchFilms","map","Form","styled","FormInput","theme","colors","white","colorShadow","active","SearchBtn","MoviesPage","useState","search","setSearch","searchSubmit","setSearchSubmit","setSearchFilms","useSearchParams","searchParam","setSearchParam","useEffect","has","get","searchFilm","fetchSearchMovie","then","data","results","Error","catch","error","toast","console","log","onSubmit","event","preventDefault","query","onChange","value","placeholder","type","BASE_URL","KEY","fetchMovies","url","config","axios","response","fetchTrendMovie","fetchMovieDetails","moviesId","fetchCast","fetchReviews","movieId","propTypes","PropTypes","Title","primaryText","LinkStyled","NavLink","CardInfoContainer","MainMovieTitle","SecondaryMovieTitle","MovieList","MovieItem","buttonBg","MovieText","grey","Img","ImageFilm"],"sourceRoot":""}