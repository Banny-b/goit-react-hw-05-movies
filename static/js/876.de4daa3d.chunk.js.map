{"version":3,"file":"static/js/876.de4daa3d.chunk.js","mappings":"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","sources":["components/MovieCast/CastStyled.jsx","components/Slider/slider.jsx","components/MovieCast/Cast.jsx","services/Api.jsx","styles/style.jsx"],"sourcesContent":["import styled from 'styled-components';\n\n\nexport const CastItem = styled.div`\n  padding: 5px;\n  background-color: ${props => props.theme.colors.buttonBg};\n  margin-right: 10px;\n  border-radius: 5px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n              0px 1px 1px 0px rgba(0, 0, 0, 0.14), \n              0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n  :hover,\n  :focus {\n    cursor: pointer;\n  }\n`;\n\nexport const ImageCast = styled.img`\n  border-radius: 5px;\n  margin-right: auto;\n  margin-left: auto;\n  width: 100%;\n`;","export const setSliderSettings = actors => {\n  const settings = {\n    speed: 500,\n    slidesToShow: 4,\n    swipeToSlide: true,\n  };\n\n  if (actors < 5) {\n    return { ...settings, slidesToShow: actors };\n  }\n  return settings;\n};","import PropTypes from 'prop-types';\nimport noPhoto from '../../images/noPhoto.png';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchCast } from '../../services/Api';\nimport { MovieText, Title, SecondaryMovieTitle } from '../../styles/style';\nimport { ImageCast, CastItem } from './CastStyled';\nimport { Loader } from '../Loader/Loader';\nimport { setSliderSettings } from '../Slider/slider';\nimport Slider from 'react-slick';\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\n\n\nexport default function Cast() {\n  const [actors, setActors] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const { moviesId } = useParams();\n\n  useEffect(() => {\n    const fetch = async () => {\n      setLoading(true);\n      try {\n        await fetchCast(moviesId).then(data => setActors(data.cast));\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetch();\n  }, [moviesId]);\n\n  const showNoActors = !loading && actors.length === 0;\n\n  return (\n    <>\n      {loading && <Loader />}\n      {showNoActors && <Title>No actors for this movie</Title>}\n      <Slider {...setSliderSettings(actors.length)} width=\"100%\">\n        {!error &&\n          actors &&\n          actors.map(({ id, character, name, profile_path }) => (\n            <CastItem key={id}>\n              {profile_path ? (\n                <ImageCast\n                  src={`https://image.tmdb.org/t/p/w300${profile_path}`}\n                  alt=\"\"\n                />\n              ) : (\n                <ImageCast src={noPhoto} alt=\"\" />\n              )}\n              {name ? (\n                <SecondaryMovieTitle>{name}</SecondaryMovieTitle>\n              ) : (\n                <SecondaryMovieTitle>No actor`s name</SecondaryMovieTitle>\n              )}\n              {character ? (\n                <MovieText>{character}</MovieText>\n              ) : (\n                <MovieText>No actor`s character</MovieText>\n              )}\n            </CastItem>\n          ))}\n      </Slider>\n    </>\n  );\n};\n\nCast.propTypes = {\n  searchFilms: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      character: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      profile_path: PropTypes.string.isRequired,\n      backdrop_path: PropTypes.string.isRequired,\n    })\n  ),\n};","import axios from 'axios';\nimport PropTypes from 'prop-types';\n\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY = '1d30702fbda303ebd1702730ed498532';\n\nasync function fetchMovies(url = '', config = {}) {\n  const response = await axios.get(url, config);\n  return response.data;\n};\n\nexport function fetchTrendMovie() {\n  return fetchMovies(`${BASE_URL}/trending/movie/day?api_key=${KEY}`);\n};\n\nexport function fetchSearchMovie(query) {\n  return fetchMovies(\n    `${BASE_URL}search/movie?api_key=${KEY}&query=${query}&language=en-US&include_adult=false`\n  );\n};\n\nexport function fetchMovieDetails(moviesId) {\n  return fetchMovies(\n    `${BASE_URL}movie/${moviesId}?api_key=${KEY}&language=en-US`\n  );\n};\n\nexport function fetchCast(moviesId) {\n  return fetchMovies(\n    `${BASE_URL}movie/${moviesId}/credits?api_key=${KEY}&language=en-US&`\n  );\n};\n\nexport function fetchReviews(movieId) {\n  return fetchMovies(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${KEY}&language=en-US&`\n  );\n};\n\nfetchSearchMovie.propTypes = {\n  search: PropTypes.string.isRequired,\n};\n\nfetchMovieDetails.propTypes = {\n  id: PropTypes.number.isRequired,\n};\n\nfetchReviews.propTypes = {\n  id: PropTypes.number.isRequired,\n};\n\nfetchCast.propTypes = {\n  id: PropTypes.number.isRequired,\n};","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\n\nconst Section = styled.section`\n  display: flex;\n  margin-top: 15px;\n  margin-right: auto;\n  margin-left: auto;\n  justify-content: center;\n`;\n\nconst Title = styled.h1`\n  text-align: end;\n  font-size: 28px;\n  margin-bottom: 10px;\n  color: ${props => props.theme.colors.primaryText};\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  animation: text 20s infinite linear reverse ;\n  @keyframes text {\n    0%{\n      transform: translate(50%, 0);\n    }\n    \n    100%{\n      transform: translate(-100%, 0);\n    }\n  }\n`;\n\nconst LinkStyled = styled(NavLink)`\n  text-decoration: none;\n`;\n\nconst CardInfoContainer = styled.div`\n  padding: 0 10px;\n`;\n\nconst MainMovieTitle = styled.h2`\n  font-size: 26px;\n  margin-top: 10px;\n  margin-bottom: 10px;\n  color: ${props => props.theme.colors.primaryText};\n`;\n\nconst SecondaryMovieTitle = styled.h3`\n  font-size: 16px;\n  margin-top: 10px;\n  margin-bottom: 10px;\n  color: ${props => props.theme.colors.primaryText};\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nconst MovieList = styled.ul`\n  display: grid;\n  max-width: 100%;\n  margin-left: auto;\n  margin-right: auto;\n  grid-gap: 24px;\n  grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));\n`;\n\nconst MovieItem = styled.li`\n  width: 100%;\n  display: block;\n  padding: 5px;\n  background-color: ${props => props.theme.colors.buttonBg};\n  transform: scale(1);\n  transition: transform 250ms linear;\n  border-radius: 5px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n              0px 1px 1px 0px rgba(0, 0, 0, 0.14), \n              0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n  :hover,\n  :focus {\n    transform: scale(1.05);\n    cursor: pointer;\n  }\n`;\n\nconst MovieText = styled.p`\n  margin-bottom: 10px;\n  color: ${props => props.theme.colors.grey};\n  font-size: 14px;\n  font-weight: bold;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nconst Img = styled.img`\n  border-radius: 5px;\n  max-width: 480px;\n`;\n\nconst ImageFilm = styled.img`\n  border-radius: 5px;\n  width: 100%;\n`;\n\nexport {\n  CardInfoContainer,\n  Title,\n  MainMovieTitle,\n  LinkStyled,\n  SecondaryMovieTitle,\n  MovieList,\n  MovieItem,\n  MovieText,\n  Img,\n  ImageFilm,\n  Section,\n};"],"names":["CastItem","styled","props","theme","colors","buttonBg","ImageCast","setSliderSettings","actors","settings","speed","slidesToShow","swipeToSlide","Cast","useState","setActors","loading","setLoading","error","setError","moviesId","useParams","useEffect","fetch","fetchCast","then","data","cast","showNoActors","length","Loader","width","map","id","character","name","profile_path","src","alt","noPhoto","BASE_URL","KEY","fetchMovies","url","config","axios","response","fetchTrendMovie","fetchSearchMovie","query","fetchMovieDetails","fetchReviews","movieId","propTypes","search","PropTypes","Title","primaryText","LinkStyled","NavLink","CardInfoContainer","MainMovieTitle","SecondaryMovieTitle","MovieList","MovieItem","MovieText","grey","Img","ImageFilm"],"sourceRoot":""}